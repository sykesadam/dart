/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as GameLayoutImport } from './routes/game/_layout'
import { Route as GameLayoutIndexImport } from './routes/game/_layout/index'

// Create Virtual Routes

const GameImport = createFileRoute('/game')()

// Create/Update Routes

const GameRoute = GameImport.update({
  id: '/game',
  path: '/game',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const GameLayoutRoute = GameLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => GameRoute,
} as any)

const GameLayoutIndexRoute = GameLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GameLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/game': {
      id: '/game'
      path: '/game'
      fullPath: '/game'
      preLoaderRoute: typeof GameImport
      parentRoute: typeof rootRoute
    }
    '/game/_layout': {
      id: '/game/_layout'
      path: '/game'
      fullPath: '/game'
      preLoaderRoute: typeof GameLayoutImport
      parentRoute: typeof GameRoute
    }
    '/game/_layout/': {
      id: '/game/_layout/'
      path: '/'
      fullPath: '/game/'
      preLoaderRoute: typeof GameLayoutIndexImport
      parentRoute: typeof GameLayoutImport
    }
  }
}

// Create and export the route tree

interface GameLayoutRouteChildren {
  GameLayoutIndexRoute: typeof GameLayoutIndexRoute
}

const GameLayoutRouteChildren: GameLayoutRouteChildren = {
  GameLayoutIndexRoute: GameLayoutIndexRoute,
}

const GameLayoutRouteWithChildren = GameLayoutRoute._addFileChildren(
  GameLayoutRouteChildren,
)

interface GameRouteChildren {
  GameLayoutRoute: typeof GameLayoutRouteWithChildren
}

const GameRouteChildren: GameRouteChildren = {
  GameLayoutRoute: GameLayoutRouteWithChildren,
}

const GameRouteWithChildren = GameRoute._addFileChildren(GameRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/game': typeof GameLayoutRouteWithChildren
  '/game/': typeof GameLayoutIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/game': typeof GameLayoutIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/game': typeof GameRouteWithChildren
  '/game/_layout': typeof GameLayoutRouteWithChildren
  '/game/_layout/': typeof GameLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/game' | '/game/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/game'
  id: '__root__' | '/' | '/game' | '/game/_layout' | '/game/_layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GameRoute: typeof GameRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GameRoute: GameRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/game"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/game": {
      "filePath": "game",
      "children": [
        "/game/_layout"
      ]
    },
    "/game/_layout": {
      "filePath": "game/_layout.tsx",
      "parent": "/game",
      "children": [
        "/game/_layout/"
      ]
    },
    "/game/_layout/": {
      "filePath": "game/_layout/index.tsx",
      "parent": "/game/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
